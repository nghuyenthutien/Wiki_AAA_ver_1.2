import os
import re

def sanitize_filename(filename):
    # X√≥a kho·∫£ng tr·∫Øng th·ª´a
    filename = filename.strip()
    # Encode () v√† kho·∫£ng tr·∫Øng n·∫øu c√≥
    filename = filename.replace('(', '%28').replace(')', '%29')
    return filename

def fix_links_in_file(filepath):
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()

    def replacer(match):
        text = match.group(1).strip()
        file = match.group(2).strip()
        fixed_filename = sanitize_filename(file)
        return f"[{text}]({fixed_filename}.md)"

    content = re.sub(
        r'\[([^\]]+?)\]\(\s*([^\s\)]+?)\s*\.md\s*\)',
        replacer,
        content
    )

    with open(filepath, 'w', encoding='utf-8') as f:
        f.write(content)

def fix_all_md_links_in_directory(directory):
    for root, _, files in os.walk(directory):
        for file in files:
            if file.endswith('.md'):
                filepath = os.path.join(root, file)
                print(f"üîß S·ª≠a: {filepath}")
                fix_links_in_file(filepath)

if __name__ == "__main__":
    folder_path = input("üìÇ Nh·∫≠p ƒë∆∞·ªùng d·∫´n th∆∞ m·ª•c ch·ª©a c√°c file .md: ").strip()
    if os.path.isdir(folder_path):
        fix_all_md_links_in_directory(folder_path)
        print("‚úÖ ƒê√£ x·ª≠ l√Ω xong to√†n b·ªô link Markdown.")
    else:
        print("‚ùå Th∆∞ m·ª•c kh√¥ng h·ª£p l·ªá.")
